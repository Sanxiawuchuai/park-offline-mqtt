package rules.parkin
import com.drzk.fact.InRealTimeBase;
import com.drzk.common.InOutRealTimeBase;
global com.drzk.service.IParkingService parkInService




//判断1秒是否入场记录




//判断是否满位
rule "is park full" 
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isFull"))
then
	boolean $isFull = parkInService.isParkFull();
	System.out.println("车场已满位:"+$isFull);
	modify($parkIn){getStatusMap().put("isFull",$isFull)}
end

//满位是否允许通过
rule "park full is pass"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==1,!statusMap.containsKey("isFullPass"),statusMap.containsKey("isFull"),statusMap["isFull"]==true)
then
	boolean $isFullPass=parkInService.isParkFullPass($parkIn.getCarNo());//
	System.out.println("满位允许入场:"+$isFullPass);
	modify($parkIn){getStatusMap().put("isFullPass",$isFullPass),setFlag($isFullPass? 0:InOutRealTimeBase.FLAG_PARK_FULL)}
end

//判断识别成功失败
rule "is read success"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isReadSuccess"))
then
	boolean $isReadSuccess = parkInService.isReadSuccess($parkIn);
	System.out.println("识别结果:"+$isReadSuccess);
	modify($parkIn){getStatusMap().put("isReadSuccess",$isReadSuccess),setFlag($isReadSuccess? 0:InOutRealTimeBase.FLAG_GSOPTSTA_FALSE)}
end

//判断大小车场
rule "is small park"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isSmallPark"))
then
	boolean $isSmallPark=parkInService.isSmallPark($parkIn.getConIndex());//
	System.out.println("判断大小车场:"+$isSmallPark);
	modify($parkIn){getStatusMap().put("isSmallPark",$isSmallPark)}
end


//是否是特种车或者黑名单(因为数据在一张表，所以统一获取)
rule "is special or black car"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("specialOrBlackCar"))
then
	int $specialOrBlackCar = parkInService.getSpecialOrBlackCar($parkIn.getCarNo());
	modify($parkIn){getStatusMap().put("specialOrBlackCar",$specialOrBlackCar)}
end

//是否是特种车辆
rule "is special car"
no-loop true
when 
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isSpecialCar"),statusMap.containsKey("specialOrBlackCar"),statusMap["specialOrBlackCar"]==InOutRealTimeBase.CAR_SPECIAL)
then
	//boolean $isSpecialCar = parkInService.isSpecialCar($parkIn.getCarNo());
	System.out.println("特种车辆");
	modify($parkIn){getStatusMap().put("isSpecialCar",true),setFlag(InOutRealTimeBase.FLAG_ALLOW_IN)}
end

//是否是黑名单
rule "is black list"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isBlackList"),statusMap.containsKey("specialOrBlackCar"),statusMap["specialOrBlackCar"]==InOutRealTimeBase.CAR_BLACK_LIST)
then
	//boolean $isBlackList = parkInService.isBlackList($parkIn.getCarNo());
	System.out.println("是黑名单");
	modify($parkIn){getStatusMap().put("isBlackList",true),setFlag(InOutRealTimeBase.FLAG_BLACK_LIST)}
end

//是否是重复记录
rule "is record duplicate"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isRecordDuplicate"))
then
    boolean $isRecordDuplicate = parkInService.isRecordDuplicate($parkIn.getCarNo(),$parkIn.getConIndex(),$parkIn.getInTime(),1);
    System.out.println("是否有重复记录:"+$isRecordDuplicate);
    modify($parkIn){getStatusMap().put("isRecordDuplicate",$isRecordDuplicate),setFlag($isRecordDuplicate? InOutRealTimeBase.FLAG_RECORD_DUPLICATE:0)}
end

//获取车辆的类型
rule "get car type"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("cardType"),statusMap.containsKey("isRecordDuplicate"),statusMap["isRecordDuplicate"]==false)
then
	int $cardType = (int)parkInService.getCardType($parkIn.getCarNo());
	System.out.println("车辆的类型:"+$cardType);
	modify($parkIn){getStatusMap().put("cardType",$cardType),setCardType($cardType)}
end

//是否是固定车
rule "is regular car"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isRegularCar"),statusMap.containsKey("isRecordDuplicate"),statusMap["isRecordDuplicate"]==false)
then
	boolean $isRegularCar = parkInService.isRegularCar($parkIn.getCardType());
	System.out.println("是否是固定车:"+$isRegularCar);
	modify($parkIn){getStatusMap().put("isRegularCar",$isRegularCar)}
end

//是否过期
rule "is card type expire"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isCardTypeExpire"),statusMap.containsKey("isRegularCar"),statusMap["isRegularCar"]==true)
then
	boolean $isCardTypeExpire = parkInService.isCardTypeExpire($parkIn.getCardType(),$parkIn.getCarNo());
	System.out.println("是否过期:"+$isCardTypeExpire);
	modify($parkIn){getStatusMap().put("isCardTypeExpire",$isCardTypeExpire),setFlag($isCardTypeExpire? InOutRealTimeBase.FLAG_CARD_EXPIRE:0)}
end

//是否是车位组(家庭组)
rule "is family group"
no-loop true
when
	//条件:固定车辆且未过期
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isFamilyGroup"),statusMap.containsKey("isCardTypeExpire"),statusMap["isCardTypeExpire"]==false)
then
	int $isFamilyGroup = parkInService.isFamilyGroup($parkIn.getCarNo());
	System.out.println("是否家庭组:"+$isFamilyGroup);
	modify($parkIn){getStatusMap().put("isFamilyGroup",$isFamilyGroup),setFlag($isFamilyGroup==0? InOutRealTimeBase.FLAG_PLACE_GROUP:0)}
end

//判断车位组入场时的类型
rule "family type"
no-loop true
when
	//条件:是家庭组
	$parkIn : InRealTimeBase(!statusMap.containsKey("familyType"),statusMap.containsKey("isFamilyGroup"),statusMap["isFamilyGroup"]==true)
then
	int $familyType = parkInService.getFamilyCarType($parkIn.getCarNo());
	System.out.println("车位组入场类型:" + $familyType);
	modify($parkIn){getStatusMap().put("familyType",$familyType)}
end

//家庭组临时车是否允许入场
rule "is family allow in"
no-loop true
when
	//条件：家庭组临时车
	$parkIn : InRealTimeBase(!statusMap.containsKey("isFamilyAllowIn"),statusMap.containsKey("familyType"),statusMap["familyType"]==0)
then
	boolean $isFamilyAllowIn = parkInService.isFamilyAllowIn($parkIn.getCarNo());
	System.out.println("家庭组临时车是否允许入场:" + $isFamilyAllowIn);
	modify($parkIn){getStatusMap().put("isFamilyAllowIn",$isFamilyAllowIn),setFlag($isFamilyAllowIn? 0:InOutRealTimeBase.FLAG_GROUP_NOT_IN)}
end


//检查通道权限
rule "is car type channel power"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==0,!statusMap.containsKey("isCarTypeChannelPower"))
then
	boolean $isCarTypeChannelPower = parkInService.isCarTypeChannelPower($parkIn.getCarNo(),$parkIn.getCardType(),$parkIn.getConIndex());
	System.out.println("通道权限:"+$isCarTypeChannelPower);
	modify($parkIn){getStatusMap().put("isCarTypeChannelPower",$isCarTypeChannelPower),setFlag($isCarTypeChannelPower? InOutRealTimeBase.FLAG_ALLOW_IN:InOutRealTimeBase.FLAG_NO_POWER)}
end

//入场是否需要确认
rule "is need confirm"
no-loop true
when 
	$parkIn : InRealTimeBase(getFlag()==InOutRealTimeBase.FLAG_ALLOW_IN,!statusMap.containsKey("isNeedConfirm"))
then
	boolean $isNeedConfirm = parkInService.isNeedConfirm();
	System.out.println("是否需要确认:"+$isNeedConfirm);
	modify($parkIn){getStatusMap().put("isNeedConfirm",$isNeedConfirm),setFlag($isNeedConfirm?InOutRealTimeBase.FLAG_NEED_CONFIRM:InOutRealTimeBase.FLAG_NOT_NEED_CONFIRM)}
end

//通知岗亭确认开闸
rule "notify confirm"
no-loop true
when 
	$parkIn : InRealTimeBase(getFlag()==InOutRealTimeBase.FLAG_NEED_CONFIRM,!statusMap.containsKey("notifyConfirm"))
then
	parkInService.isNeedConfirm();
	System.out.println("通知岗亭确认");
	modify($parkIn){getStatusMap().put("notifyConfirm",true)}
end

//岗亭是否取消
rule "is cancel"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==InOutRealTimeBase.FLAG_NEED_CONFIRM,statusMap.containsKey("isCancel"),statusMap.containsKey("notifyConfirm"),statusMap["notifyConfirm"]==true)
then
	boolean $isCancel = (boolean)$parkIn.getStatusMap().get("isCancel");
	System.out.println("岗亭是否取消:"+$isCancel);
	modify($parkIn){setFlag($isCancel? InOutRealTimeBase.FLAG_YES:InOutRealTimeBase.FLAG_CANCEL)}
end

//播报语音
rule "broadcast voice"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()!=InOutRealTimeBase.FLAG_DEFAULT)
then
	System.out.println("播报语音");
	parkInService.broadcastVoice($parkIn.getFlag(),$parkIn.getConIndex());
end

//保存记录
rule "save record"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==InOutRealTimeBase.FLAG_NOT_NEED_CONFIRM || getFlag()==InOutRealTimeBase.FLAG_YES)
then
	System.out.println("保存记录");
	parkInService.saveParkInRecord($parkIn);	
end


//开闸
rule "open"
no-loop true
when
	$parkIn : InRealTimeBase(getFlag()==InOutRealTimeBase.FLAG_NOT_NEED_CONFIRM || getFlag()==InOutRealTimeBase.FLAG_YES)
then
	System.out.println("开闸");
	parkInService.open($parkIn.getConIndex());
end